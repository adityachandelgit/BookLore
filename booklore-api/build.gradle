plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.hibernate.orm' version '6.6.13.Final'
    id 'jacoco' 
}

group = 'com.adityachandel'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // --- Spring Boot ---
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // --- Database & Migration ---
    implementation 'org.mariadb.jdbc:mariadb-java-client:3.5.3'
    implementation 'org.flywaydb:flyway-mysql:11.8.0'

    // --- Security & Authentication ---
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // --- Lombok (For Clean Code) ---
    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'

    // --- Book & Image Processing ---
    implementation 'org.apache.pdfbox:pdfbox:3.0.4'
    implementation 'org.apache.pdfbox:jbig2-imageio:3.0.4'
    implementation 'com.github.jai-imageio:jai-imageio-core:1.4.0'
    implementation 'com.github.jai-imageio:jai-imageio-jpeg2000:1.4.0'
    implementation 'io.documentnode:epub4j-core:4.2.2'

    // --- JSON & Web Scraping ---
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.3'
    implementation 'org.jsoup:jsoup:1.19.1'

    // --- Mapping (DTOs & Entities) ---
    implementation 'org.mapstruct:mapstruct:1.6.3'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'

    // --- API Documentation ---
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'

    // --- Testing ---
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.mockito', module: 'mockito-core' // drop old 2.x
    }
    testImplementation 'org.mockito:mockito-core:5.17.0'  // Java 21‑compatible
    testImplementation 'org.assertj:assertj-core:3.25.3'
    testImplementation 'com.h2database:h2:2.1.214'
}

hibernate {
    enhancement {
        enableAssociationManagement = true
    }
}

/* ───── Tasks ──────────────────────────────────────────────────────────── */

// Run JUnit 5 (Jupiter) and log pass / skip / fail events
tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

/* ───── JaCoCo configuration ───────────────────────────────────────────── */

jacoco {
    toolVersion = '0.8.13'
}

tasks.named('jacocoTestReport', JacocoReport) {
    dependsOn tasks.test

    reports {
        xml.required  = true
        html.required = true
    }
    sourceSets sourceSets.main
}

tasks.named('jacocoTestCoverageVerification', JacocoCoverageVerification) {
    dependsOn tasks.test

    violationRules {
        rule {
            element = 'BUNDLE'          // apply to whole codebase

            limit {                     // ← singular, not limits { … }
                counter = 'LINE'
                value   = 'COVEREDRATIO'
                minimum = 0.70 as BigDecimal
            }
        }
    }
}

/* Make “gradle check” run tests, generate coverage, and enforce threshold */
tasks.check.dependsOn 'jacocoTestReport', 'jacocoTestCoverageVerification'