name: Build, Tag, Push, and Release to GitHub Container Registry

on:
  push:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Get Latest Master Version
        id: get_version
        run: |
          latest_tag=$(git tag --list "v*" --sort=-v:refname | head -n 1)
          latest_tag=${latest_tag:-"v0.0.0"}
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
          echo "Latest master tag: $latest_tag"

      - name: Auto-Increment Version (Only for Master)
        if: github.ref == 'refs/heads/master'
        id: bump_version
        run: |
          old_version=${{ env.latest_tag }}
          IFS='.' read -r -a parts <<< "${old_version//[!0-9.]/}"
          new_version="${parts[0]}.${parts[1]}.$((parts[2] + 1))"
          new_tag="v${new_version}"
          echo "new_tag=$new_tag" >> $GITHUB_ENV
          echo "New version: $new_tag"

      - name: Generate Image Tag
        id: set_image_tag
        run: |
          branch="${GITHUB_REF#refs/heads/}"
          if [[ "$branch" == "master" ]]; then
            image_tag="${{ env.new_tag }}"
          elif [[ "$branch" == "develop" ]]; then
            short_sha=$(git rev-parse --short HEAD)
            image_tag="${{ env.latest_tag }}-develop-${short_sha}"
          else
            short_sha=$(git rev-parse --short HEAD)
            image_tag="${short_sha}"
          fi
          echo "image_tag=$image_tag" >> $GITHUB_ENV
          echo "Image tag: $image_tag"

      - name: Create Git Tag (Only for Master)
        if: github.ref == 'refs/heads/master'
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag ${{ env.new_tag }}
          git push origin ${{ env.new_tag }}

      - name: Build Docker Image
        run: |
          docker build -t ghcr.io/${{ github.actor }}/booklore-app:${{ env.image_tag }} .

      - name: Push Docker Image to GHCR
        run: |
          docker push ghcr.io/${{ github.actor }}/booklore-app:${{ env.image_tag }}

      - name: Push Latest Tag (Only for Master)
        if: github.ref == 'refs/heads/master'
        run: |
          docker tag ghcr.io/${{ github.actor }}/booklore-app:${{ env.new_tag }} ghcr.io/${{ github.actor }}/booklore-app:latest
          docker push ghcr.io/${{ github.actor }}/booklore-app:latest

      - name: Create GitHub Release (Only for Master)
        if: github.ref == 'refs/heads/master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ env.new_tag }} \
            --title "Release ${{ env.new_tag }}" \
            --notes "Automated release for ${{ env.new_tag }}"